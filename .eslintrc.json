{
  "root": true,
  // allows us to parse the code with babel so that jsx code won't be considered an error
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "prettier",
    "@typescript-eslint",
    "jest"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "prettier/@typescript-eslint"
  ],
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    // Allows test files to use jest global functions without confusing eslint into thinking they are undeclared
    "jest/globals": true 
  },
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 11,
    "sourceType": "module"
  },
  "rules": {
    "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx", ".ts", ".tsx"] }], // only return an error if JSX syntax is used on files other than those with .js or .jsx file extension
    "prettier/prettier": [
      "error", { 
        "singleQuote": true, 
        "trailingComma": "all",
        "endOfLine": "auto"
      }
    ],
    // Looks like no-use-before-define is required to be disabled when using typescript and react as it can report incorrect errors.
    // See https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-use-before-define.md#how-to-use
    // and https://stackoverflow.com/questions/63818415/react-was-used-before-it-was-defined/64024916#64024916
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"]
  },
  "overrides": [
    // Overrides to stop typescript displaying various linting warnings for js files. 
    {
      "files": ["*.js", "*.jsx"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off"
      }
    }
  ]
}